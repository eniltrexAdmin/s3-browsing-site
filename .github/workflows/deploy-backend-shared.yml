name: Apply terraform changes to PRODUCTION on GW
on:
  workflow_run:
    workflows: ["deploy-list-lambda"]
    types:
      - completed

jobs:
  update-infra-production:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."


      - id: EniltrexAction
        uses: eniltrexAdmin/install-terraform-github-action@v1.0.4
        with:
          version: '1.9.5'
          working-directory: 'install-terraform'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_TERRAFORM_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_TERRAFORM_KEY_SECRET }}
          aws-region: eu-west-3


      - name: Terraform apply
        working-directory: backend/infra/production
        env:
          TF_VAR_bucket_name: ${{ secrets.BUCKET_NAME }}
          TF_VAR_domain_name: ${{ secrets.DOMAIN_NAME }}
          TF_VAR_be_api_key: ${{ secrets.BE_API_KEY }}
          TF_VAR_list_lambda_state_bucketL: ${{ secrets.TF_STATES_BUCKET }}
          TF_VAR_list_lambda_state_key: ${{ secrets.BUCKET_NAME}}-s3-browsing/list-lambda/terraform.tfstate
        run: |
          terraform init -backend-config="bucket=${{ secrets.TF_STATES_BUCKET }}" \
             -backend-config="key=${{ secrets.BUCKET_NAME}}-s3-browsing/api-gw/terraform.tfstate" \
             -backend-config="region=eu-west-3"
          terraform plan -out=tfplan -input=false
          terraform apply  -input=false tfplan