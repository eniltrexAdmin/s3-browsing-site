name: Apply terraform changes to PRODUCTION on GW
on:
  push:
    branches:
      - main
    paths:
      - 'backend/list-s3-items/**'
      - '.github/workflows/deploy-list-s3-lambda.yml'

jobs:
  build-go-project:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: list-s3-program
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install go language
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
      - name: Install dependencies
        working-directory: ./backend/list-s3-items
        run: go get .

      - name: Unit testing
        working-directory: ./backend/list-s3-items
        run: go test

      - name: Build Go executable
        working-directory: ./backend/list-s3-items
        run: go build -o ../../list-s3-program

      - id: upload-artifact
        name: Upload executable as artifact
        uses: actions/upload-artifact@v4
        with:
          name: list-s3-program
          path: list-s3-program



  update-infra-production:
    runs-on: ubuntu-latest
    needs: build-go-project
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."


      - id: EniltrexAction
        uses: eniltrexAdmin/install-terraform-github-action@v1.0.4
        with:
          version: '1.9.5'
          working-directory: 'install-terraform'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_TERRAFORM_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_TERRAFORM_KEY_SECRET }}
          aws-region: eu-west-3

      - name: Download lambda-executable artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{needs.build-go-project.outputs.artifact-name}}


      - name: Terraform apply
        working-directory: backend/infra/production
        env:
          TF_VAR_bucket_name: ${{ secrets.BUCKET_NAME }}
          TF_VAR_domain_name: ${{ secrets.DOMAIN_NAME }}
          TF_VAR_api_gw_state_bucket: ${{ secrets.TF_STATES_BUCKET }}
          TF_VAR_api_gw_state_key: ${{ secrets.BUCKET_NAME}}-s3-browsing/api-gw/terraform.tfstate
        run: |
          terraform init -backend-config="bucket=${{ secrets.TF_STATES_BUCKET }}" \
             -backend-config="key=${{ secrets.BUCKET_NAME}}-s3-browsing/list-lambda/terraform.tfstate" \
             -backend-config="region=eu-west-3"
          terraform plan -out=tfplan -input=false
#          terraform apply  -input=false tfplan